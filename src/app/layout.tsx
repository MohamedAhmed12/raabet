/* eslint-disable */
import "./globals.css";

import { GoogleAnalytics } from "@next/third-parties/google";
import type { Metadata } from "next";
import { NextIntlClientProvider } from "next-intl";
import { Geist, Geist_Mono, Noto_Sans_Display } from "next/font/google";
import Head from "next/head";
import { Toaster } from "sonner";

import { customGetLocale } from "@/lib/customGetLocale";
import { ReactQueryProvider } from "@/components/QueryClientProvider";
import arMessages from "../messages/ar.json";
import enMessages from "../messages/en.json";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const notoSans = Noto_Sans_Display({
  subsets: ["latin"],
  variable: "--font-noto-sans-display",
  weight: ["400", "500", "600", "700", "800"], // Add font weights as needed
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const messages: Record<string, any> = {
  en: enMessages,
  ar: arMessages,
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const locale: string = await customGetLocale();
  const currentLocalMessages = messages[locale];
  return (
    <html lang={locale} dir={locale == "ar" ? "rtl" : "ltr"}>
      <body
        className={`${notoSans.variable} ${geistSans.variable} ${geistMono.variable} antialiased text-deep-blue-gray`}
      >
        <NextIntlClientProvider locale={locale} messages={currentLocalMessages}>
          <ReactQueryProvider>
            <Toaster />
            {children}
          </ReactQueryProvider>
        </NextIntlClientProvider>
      </body>
      {process.env.NEXT_PUBLIC_GA_ID &&
        process.env.NODE_ENV === "production" && (
          <GoogleAnalytics gaId={process.env.NEXT_PUBLIC_GA_ID} />
        )}
    </html>
  );
}
